{#
/**
 * @file
 * Theme implementation to display a Blog Post.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{%
  set classes = [
    'blog-post',
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'blog-post--' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
<article{{ attributes.addClass(classes) }}>
  {% if node.field_image.entity.fileuri %}
    <div class="blog-post__image">
      {{ content.field_image }}
    </div>
  {% endif %}

  {# Social Media Sharing Nav. #}
  <div class="social-media-sharing-nav">
    <ul class="social-media-sharing-menu clearfix">
      <li class="social-media-sharing-menu__item">
        <a class="social-media-sharing-menu__link social-media-sharing-menu__link--facebook" href="https://facebook.com/sharer/sharer.php?u={{ absolute_encoded_path }}" target="_blank" aria-label="" title="{{ 'Share on Facebook'|t }}"><i class="fa fa-facebook" aria-hidden="true"></i></a>
      </li>
      <li class="social-media-sharing-menu__item">
        <a class="social-media-sharing-menu__link social-media-sharing-menu__link--twitter" href="https://twitter.com/intent/tweet/?text={{ encoded_title }}&amp;url={{ absolute_encoded_path }}" target="_blank" aria-label="" title="{{ 'Share on Twitter'|t }}"><i class="fa fa-twitter" aria-hidden="true"></i></a>
      </li>
      <li class="social-media-sharing-menu__item">
        <a class="social-media-sharing-menu__link social-media-sharing-menu__link--google-plus" href="https://plus.google.com/share?url={{ absolute_encoded_path }}" target="_blank" aria-label="" title="{{ 'Share on Google+'|t }}"><i class="fa fa-google-plus" aria-hidden="true"></i></a>
      </li>
      <li class="social-media-sharing-menu__item">
        <a class="social-media-sharing-menu__link social-media-sharing-menu__link--linkedin" href="https://www.linkedin.com/shareArticle?mini=true&amp;url={{ absolute_encoded_path }}&amp;title={{ encoded_title }}&amp;summary={{ encoded_title }}&amp;source={{ absolute_encoded_path }}" target="_blank" aria-label="" title="{{ 'Share on LinkedIn'|t }}"><i class="fa fa-linkedin" aria-hidden="true"></i></a>
      </li>
    </ul>
  </div>
  {# / Social Media Sharing Nav. #}

  {{ title_prefix }}
  <h1 {{ title_attributes.addClass('page-title--blog-post') }}>{{ label }}</h1>
  {{ title_suffix }}

  <div class="blog-post-meta blog-post-meta--node">
    {% if content.field_date %}
      {{ content.field_date }}
    {% endif %}
    {% if blog_author_name %}
      <i>|</i>
      {{ 'By'|t }} <a href="{{ base_path }}blog/author/{{ blog_author_id }}">{{ blog_author_name }}</a>
    {% endif %}
  </div>
  <div{{ content_attributes }}>
    {{ content.body }}
  </div>
  {% if node.field_terms_reference.0.target_id %}
    <div class="blog-post__footer">
      <div class="blog-post-tags">
        <div class="blog-post-tags__label">{{ 'Posted in'|t }}</div>
        <div class="blog-post-tags__list clearfix">
          {{ content.field_terms_reference }}
        </div>
      </div>
    </div>
  {% endif %}
  {% if content.field_node_comments and (node.field_node_comments.status == 2) %}
    <div class="blog-post__comments">
      {{ content.field_node_comments }}
    </div>
  {% endif %}
</article>
